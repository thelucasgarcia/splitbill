// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL") // uses connection pooling
  directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
}

model User {
  id         String       @id @default(uuid())
  name       String
  username   String       @unique
  email      String       @unique
  picture    String?
  password   String
  cpf        String?      @unique
  phone      String?      @unique
  createdAt  DateTime     @default(now())
  updatedAt  DateTime     @updatedAt
  deletedAt  DateTime?
  bill       Bill[]
  billMember BillMember[]
}

model Bill {
  id          String   @id @default(uuid())
  name        String
  description String?
  tag         String[]
  userId      String
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  editValues    Boolean @default(false)
  inviteMembers Boolean @default(false)

  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?

  items   BillItem[]
  members BillMember[]
}

model BillItem {
  id     String @id @default(uuid())
  billId String
  bill   Bill   @relation(fields: [billId], references: [id], onDelete: Cascade)

  name     String
  quantity Int              @default(0)
  price    Decimal          @default(0) @db.Money
  type     BillType         @default(EQUALLY)
  members  BillMemberItem[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model BillMember {
  id       String           @unique @default(uuid())
  billId   String
  bill     Bill             @relation(fields: [billId], references: [id], onDelete: Cascade)
  memberId String
  member   User             @relation(fields: [memberId], references: [id], onDelete: Cascade)
  items    BillMemberItem[]

  @@id([id, memberId, billId])
  @@unique([memberId, billId])
}

model BillMemberItem {
  id     String   @id @default(uuid())
  itemId String
  item   BillItem @relation(fields: [itemId], references: [id], onDelete: Cascade)

  memberId String
  member   BillMember @relation(fields: [memberId], references: [id], onDelete: Cascade)

  percentage Float @default(0)

  @@unique([memberId, itemId])
}

enum BillType {
  PERCENTAGE
  EQUALLY
  VALUE
  AMOUNT
}
